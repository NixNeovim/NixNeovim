name: Update inputs with PR

on:
  schedule:
    - cron: "5 14 * * 0,4"
  workflow_dispatch:

jobs:
  update-inputs:
    runs-on: ubuntu-latest
    name: Update Inputs
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ github.token }}
          ref: ${{ github.head_ref }}
      - uses: cachix/install-nix-action@v20
        with:
          github_access_token: ${{ github.token }}
      - name: Update inputs
        run: |
          nix flake update

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ github.token }}
          title: "[BOT] Update inputs"
          branch: update-inputs-bot # merge from this branch
          base: main # merge into this branch
          delete-branch: true
          add-paths: flake.lock
          labels: automerge

  nix-flake-check:
    runs-on: ubuntu-latest
    needs: update-inputs
    name: Run checks
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ github.token }}
          ref: update-inputs-bot
      - uses: cachix/install-nix-action@v20
        with:
          github_access_token: ${{ github.token }}

      - name: Check Libs
        run: |
          nix build .#checks.x86_64-linux.lib -L

      - name: Basic checks
        run: |
          nix build .#checks.x86_64-linux.basic-group1 -L
          nix build .#checks.x86_64-linux.basic-group2 -L
          nix build .#checks.x86_64-linux.basic-group3 -L

      - name: Check plugins
        run: |
          nix build .#checks.x86_64-linux.plugins -L

      - name: Check colorschemes
        run: |
          nix build .#checks.x86_64-linux.basic-colorschemes -L
          nix build .#checks.x86_64-linux.colorschemes -L

      - name: Check neovim module
        run: |
          nix build .#checks.x86_64-linux.neovim -L

  # merge:
    # runs-on: ubuntu-latest
    # needs: nix-flake-check
    # name: Merge on success
    # steps:
      # - name: Merge Pull Request
        # if: success()
        # uses: actions/github-script@v5
        # with:
          # github-token: ${{ github.token }}
          # script: |
            # await github.pulls.merge({
              # owner: context.repo.owner,
              # repo: context.repo.repo,
              # pull_number: context.payload.pull_request.number,
            # });

  # merge:
    # runs-on: ubuntu-latest
    # needs: run-checks
    # name: Merge PR
    # steps:
      # - name: Merge PR
        # uses: reitermarkus/automerge@v2.6.0
        # with:
          # token: ${{ github.token }}
          # merge-method: squash
